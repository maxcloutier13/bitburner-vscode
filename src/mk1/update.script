//Stop all scripts on all servers and attack new target
var serverList = []
var directory = "/mk1/scan/";
var newTarget = read(directory + "bestserver.txt");
var oldTarget = read(directory + "target.txt");

//Show window
tail();

//Update current target for other scripts
write(directory + "target.txt", newTarget, "w");

//Stopping the server upgrade routine
kill("/mk1/servers.script", "home");

//Redirecting home attack
kill("/mk1/hack.script", "home", oldTarget);
kill("/mk1/weaken.script", "home", oldTarget);
kill("/mk1/grow.script", "home", oldTarget);
sleep(2000);
run("/mk1/weaken.script", 60, newTarget);
run("/mk1/grow.script", 60, newTarget);
run("/mk1/hack.script", 60, newTarget);
alert("Home is attacking new target: " + newTarget);

//Redirecting personal servers
ctrServers = 0;
var servers = getPurchasedServers();
for (j = 0; j < servers.length; j++) {
	var currentServer = servers[j];
	//GOOD TO GO!
	killall(currentServer);
	sleep(1000);
	//Copy hack
	scp("/mk1/hack.script", currentServer);
	ram = getServerMaxRam(currentServer);
	print(currentServer + " - Ram:" + ram);
	cost = getScriptRam("/mk1/hack.script", currentServer);
	threads = Math.floor(ram / cost);
	print(currentServer + " - Cost:" + cost + " - Ram: " + ram + " - Threads" + threads);
	print(currentServer + " - Running hack on:" + newTarget + " - Threads:" + threads);
	exec("/mk1/hack.script", currentServer, threads, newTarget);
	print(currentServer + " - Hack is running. All done");
	ctrServers++;
}

//Redirecting weak servers
var serverCount = read(directory + "weakcount.txt");
//Loading the serverlist from file
print("-- Loading serverlist --");
print("-- Loading serverlist --");
for (x = 0; x <= serverCount; x++) {
	serverList[x] = read(directory + "w" + x + ".txt");
	print("File " + x + " read:" + serverList[x]);
}
print("Loaded " + serverList.length + " servers");
ctr = 0;
//Keeps the 4 first servers targeting n00dles
//The rest gets redirected to new target
for (i = 4; i < serverList.length; i++) {
	var currentServer = serverList[i];
	//GOOD TO GO!
	killall(currentServer);
	sleep(1000);
	ram = getServerMaxRam(currentServer);
	print(currentServer + " - Ram:" + ram);
	cost = getScriptRam("/mk1/hack.script", currentServer);
	threads = Math.floor(ram / cost);
	print(currentServer + " - Cost:" + cost + " - Ram: " + ram + " - Threads" + threads);
	if (threads > 0) {
		print(currentServer + " - Running hack on:" + newTarget + " - Threads:" + threads);
		exec("/mk1/hack.script", currentServer, threads, newTarget);
		print(currentServer + " - Hack is running. All done");
		ctr++;
	}
	else {
		print(currentServer + " - Not enough RAM. Skipping");
	}
}
//Restart the server upgrade
print("Restarting the server upgrade routine");
run("/mk1/servers.script", 1);
alert("Updated " + ctrServers + " servers + " + ctr + " weak to target: " + newTarget);