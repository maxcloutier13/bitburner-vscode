/* -+-+-+- servers.script -+-+-+- */
// Buys basic servers then starts upgrading them

/* ----- Variables ----- */
var target = read(directory + "target.txt");
var oldTarget = target;
var ram = 8;
var i = 0;

/* -----Settings ----- */
// Show window 
tail();
// Disable logging
disableLog("ALL");
// Directory for the scan txt files
var directory = "/mk1/scan/";

/* ----- Main ----- */
print("------ servers.script -----------------------------");

// First fills up with 8go servers
var serverCount = getPurchasedServers().length;
var limitServer = getPurchasedServerLimit();
print("-- Current: " + serverCount + " - Max: " + limitServer);
sleep(2000);
if (serverCount < limitServer) {
	print("--- Initial setup - Buying 8go servers")
	write(directory + "ram.txt", ram, "w");
	while (serverCount < getPurchasedServerLimit()) {
		// Check if we have enough money to purchase a server
		var cost = getPurchasedServerCost(ram);
		if (getServerMoneyAvailable("home") > cost) {
			print("---- Money! Purchasing " + serverCount + "/" + limitServer + "...")
			var hostname = purchaseServer("pserv-" + i, ram);
			scp("/mk1/hack.script", hostname);
			//Find how many times it can run
			exec("/mk1/hack.script", hostname, 3, target);
			serverCount = getPurchasedServers().length;
		} else {
			print("---- Not enough money for " + serverCount + "/" + limitServer + " - Waiting for " + cost);
			sleep(5000);
		}
	}
}

// Reading the last upgraded ram
ram = read(directory + "ram.txt");
// Keeps upgrading until 8192go upgrade
while (ram <= 8192) {
	// Sort the servers
	var servers = getPurchasedServers();
	var skipped = [];
	var upgservers = [];
	// Sorts the servers
	print("-- Sorting servers to upgrade to " + ram);
	for (i = 0; i < servers.length; i++) {
		currentServer = servers[i];
		currentServerRam = getServerMaxRam(currentServer);
		// Check if server needs upgrade
		if (currentServerRam >= ram) {
			print("--- Server " + currentServer + " @" + currentServerRam + " doesn't need upgrade");
			skipped.push(currentServer);
		} else {
			print("--- Server " + currentServer + " @" + currentServerRam + " needs upgrade");
			upgservers.push(currentServer);
		}
	}
	print("---- Done Sorting ----");
	var doneCount = skipped.length;
	// Write the number of already upgraded serves
	write(directory + "ramservers.txt", doneCount, "w");
	print("-- Skipping " + skipped.length + " servers");
	print("-- Upgrading " + upgservers.length + " servers to " + ram);
	sleep(5000);
	for (i = 0; i < upgservers.length; i++) {
		flag = 0;
		currentServer = upgservers[i];
		print("--- Upgrading " + currentServer);
		currentServerRam = getServerMaxRam(currentServer);
		print("-- CurrentRam " + currentServerRam);
		print("-- Upgrading server: " + currentServer + " from " + currentServerRam + " to " + ram + "go");
		//print("Flag= " + flag);
		while (flag === 0) {
			if (getServerMoneyAvailable("home") > getPurchasedServerCost(ram)) {
				print("--- Enough money. Proceeding");
				sleep(1000);
				// Delete old server
				killall(currentServer);
				// Finds the target of the old server
				var scripts = ps(currentServer);
				for (j = 0; j < scripts.length; ++j) {
					var currentScript = scripts[j];
					print("---- Finding old target if it exists");
					if (currentScript.filename === "/mk1/hack.script") {
						print("----- Found hack script. Getting oldTarget");
						oldTarget = currentScript.args[0];
					}
				}
				// Get name
				var oldName = currentServer;
				// Delete 
				deleteServer(currentServer);
				// Create new server
				newServer = purchaseServer(oldName, ram);
				print("--- Purchased: " + newServer);
				// Copy hack
				print("--- Copy hack");
				scp("/mk1/hack.script", newServer);
				// Find how many times it can run
				ram = getServerMaxRam(newServer);
				print("--- " + newServer + " - Ram:" + ram);
				cost = getScriptRam("/mk1/hack.script", newServer);
				threads = Math.floor(ram / cost);
				print("--- Targeting: " + target);
				exec("/mk1/hack.script", newServer, threads, target);
				doneCount++;
				write(directory + "ramservers.txt", doneCount, "w");
				print("---- Server " + newServer + " upgraded to " + ram + " ram");
				flag = 1;
			} else {
				var missing = getPurchasedServerCost(ram) / 1000000;
				print("--- Need: " + missing + "M - Waiting...");
				flag = 0;
				sleep(5000);
			}
		}
	}

	// When servers are decent, switch target
	if (ram === 512) {
		// Servers are strong: Switch target.
		if (prompt("Servers @ 512go. Update Target?")) {
			run("/mk1/update.script", 1);
		}
	}

	// Next upgrade x4
	var ramDone = ram;
	ram = ram * 4;
	// Write ram info to txt file
	write(directory + "ram.txt", ramDone, "w");
}

alert("All servers upgraded to " + ramDone);
print("---------------- servers DONE! --------------------");