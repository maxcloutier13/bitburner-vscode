//Buys servers then upgrade them by wave
var directory = "/mk1/scan/";
var target = read(directory + "target.txt");
var oldTarget = target;
var ram = 8;
var i = 0;
disableLog("ALL");
//Show window
tail();

//First fills up with 8go servers
print("------------------------------- servers - Start ---");
var serverCount = getPurchasedServers().length;
var limitServer = getPurchasedServerLimit();
print("Current: " + serverCount + " - Max: " + limitServer);
sleep(2000);
if (serverCount < limitServer) {
	print("--- Initial setup - Buying 8go servers ---")
	write(directory + "ram.txt", ram, "w");
	while (serverCount < getPurchasedServerLimit()) {
		// Check if we have enough money to purchase a server
		var cost = getPurchasedServerCost(ram);
		if (getServerMoneyAvailable("home") > cost) {
			print("--- Money! Purchasing " + serverCount + "/" + limitServer + "...  ---")
			var hostname = purchaseServer("pserv-" + i, ram);
			scp("/mk1/hack.script", hostname);
			//Find how many times it can run
			exec("/mk1/hack.script", hostname, 3, target);
			serverCount = getPurchasedServers().length;
			//alert("Server " + hostname + " up and running");
		}
		else {
			print("--- Not enough money for " + serverCount + "/" + limitServer + " - Waiting for " + cost + " ---");
			sleep(5000);
		}
	}
}

//Reading the last upgraded ram
ram = read(directory + "ram.txt");
clearLog();
while (true) {
	//Sort the servers
	var servers = getPurchasedServers();
	var skipped = [];
	var upgservers = [];
	//Sorts the servers
	print("---- Sorting servers to upgrade to " + ram + " ----");
	for (i = 0; i < servers.length; i++) {
		currentServer = servers[i];
		currentServerRam = getServerMaxRam(currentServer);
		//Check if server needs upgrade
		if (currentServerRam >= ram) {
			print("---- Server " + currentServer + " @" + currentServerRam + " doesn't need upgrade ----");
			skipped.push(currentServer);
		}
		else {
			print("---- Server " + currentServer + " @" + currentServerRam + " needs upgrade ----");
			upgservers.push(currentServer);
		}
	}
	print("---- Done Sorting ----");
	var doneCount = skipped.length;
	//Write the number of already upgraded serves
	write(directory + "ramservers.txt", doneCount, "w");
	print("--- Skipping " + skipped.length + " servers ---");
	print("--- Upgrading " + upgservers.length + " servers to " + ram + " ---");
	sleep(5000);
	for (i = 0; i < upgservers.length; i++) {
		flag = 0;
		//clearLog();
		currentServer = upgservers[i];
		print("--------- Upgrading " + currentServer + " ---------");
		currentServerRam = getServerMaxRam(currentServer);
		print("-- CurrentRam " + currentServerRam + " --");
		//Check if server needs upgrade
		// Check if we have enough money to purchase a server
		print("---- Start: " + currentServer + " from " + currentServerRam + " to " + ram + "go ----");
		//print("Flag= " + flag);
		while (flag === 0) {
			//print(" -- While starts -- ");
			if (getServerMoneyAvailable("home") > getPurchasedServerCost(ram)) {
				//clearLog();
				print("- Enough money. Proceeding -----------");
				sleep(1000);
				//Delete old server
				killall(currentServer);
				//Finds the target of the old server
				var scripts = ps(currentServer);
				//print("- Finding hack script from " + scripts.length + " -");
				for (j = 0; j < scripts.length; ++j) {
					var currentScript = scripts[j];
					print("-- Script: " + currentScript + " --");
					if (currentScript.filename === "/mk1/hack.script") {
						print("-- Found hack script. Getting oldTarget --");
						oldTarget = currentScript.args[0];
					}
					else {
						print("-- Not hack.script. --");
					}
				}
				//Get name
				var oldName = currentServer;
				//print("OldName: " + oldName);
				deleteServer(currentServer);
				//print("OldName: " + oldName);
				//Create new server
				newServer = purchaseServer(oldName, ram);
				//print("- Purchased: " + newServer + " -");
				//Copy hack
				//print("- Copy hack - ");
				scp("/mk1/hack.script", newServer);
				//Find how many times it can run
				ram = getServerMaxRam(newServer);
				print(newServer + " - Ram:" + ram);
				cost = getScriptRam("/mk1/hack.script", newServer);
				threads = Math.floor(ram / cost);
				print("--- Targeting: " + target);
				exec("/mk1/hack.script", newServer, threads, target);
				//print("--Flag= " + flag);
				doneCount++;
				write(directory + "ramservers.txt", doneCount, "w");
				print("Server " + newServer + " upgraded to " + ram + " ram");
				flag = 1;
				//sleep(2000);
			}
			else {
				//clearLog();
				//print("---- Upgrading: " + doneCount + " " + currentServer + " from " + currentServerRam + " to " + ram + "go ----");
				var missing = getPurchasedServerCost(ram) / 1000000;
				print("-- Need: " + missing + "M - Waiting...");
				flag = 0;
				sleep(5000);
			}
		}
	}
	if (ram === 512) {
		//Servers are strong: Switch target.
		if (prompt("Servers @ 512go. Update Target?")) {
			run("/mk1/update.script", 1);
		}
	}

	//Next upgrade x4
	var ramDone = ram;
	ram = ram * 4;
	//Write ram info to txt file
	write(directory + "ram.txt", ramDone, "w");
	if (prompt("Keep upgrading servers to " + ram + "?"))
		print("Keep going!");
	else
		exit();
}
alert("All servers upgraded to " + ram);
print("------------------------------- servers - End ---");